{"ast":null,"code":"import axios from \"axios\";\nimport mqtt from \"mqtt/dist/mqtt\"; // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö browser\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      loading: false,\n      prediction: \"\",\n      errorMsg: \"\",\n      intervalId: null,\n      isTranslating: false,\n      cameraOn: false,\n      stream: null,\n      translations: [],\n      saving: false,\n      mqttClient: null\n    };\n  },\n  mounted() {\n    this.startCamera();\n    this.loadTranslations();\n    this.connectMQTT();\n  },\n  beforeDestroy() {\n    this.stopTranslation();\n    this.stopCamera();\n    if (this.mqttClient) this.mqttClient.end();\n  },\n  methods: {\n    // ================= MQTT =================\n    connectMQTT() {\n      this.mqttClient = mqtt.connect(\"wss://broker.hivemq.com:8884/mqtt\");\n      this.mqttClient.on(\"connect\", () => {\n        console.log(\"‚úÖ MQTT connected (Vue)\");\n        this.mqttClient.subscribe(\"hand_sign/translation\", err => {\n          if (!err) console.log(\"üì° Subscribed to hand_sign/translation\");\n        });\n      });\n      this.mqttClient.on(\"message\", (topic, message) => {\n        console.log(\"üì© MQTT message:\", topic, message.toString());\n        if (topic === \"hand_sign/translation\") {\n          this.prediction = message.toString();\n          this.speakText(this.prediction);\n        }\n      });\n      this.mqttClient.on(\"error\", err => {\n        console.error(\"‚ùå MQTT error:\", err);\n      });\n    },\n    // ================= CAMERA =================\n    async startCamera() {\n      try {\n        this.stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        this.$refs.video.srcObject = this.stream;\n        this.cameraOn = true;\n      } catch (err) {\n        this.errorMsg = \"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á\";\n        this.cameraOn = false;\n      }\n    },\n    stopCamera() {\n      if (this.stream) {\n        this.stream.getTracks().forEach(track => track.stop());\n        this.stream = null;\n      }\n      if (this.$refs.video) this.$refs.video.srcObject = null;\n      this.cameraOn = false;\n    },\n    toggleCamera() {\n      if (this.cameraOn) {\n        this.stopCamera();\n        this.stopTranslation();\n      } else {\n        this.startCamera();\n      }\n    },\n    // ================= TRANSLATION =================\n    toggleTranslate() {\n      if (this.isTranslating) {\n        this.stopTranslation();\n      } else {\n        if (!this.cameraOn) {\n          this.errorMsg = \"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏õ‡∏•\";\n          return;\n        }\n        this.startTranslation();\n      }\n    },\n    startTranslation() {\n      if (this.intervalId) return;\n      this.isTranslating = true;\n      this.prediction = \"\";\n      this.errorMsg = \"\";\n      this.intervalId = setInterval(this.sendFrame, 7500);\n    },\n    stopTranslation() {\n      if (this.intervalId) {\n        clearInterval(this.intervalId);\n        this.intervalId = null;\n      }\n      this.isTranslating = false;\n      this.loading = false;\n    },\n    async sendFrame() {\n      if (this.loading || this.saving) return;\n      this.loading = true;\n      this.errorMsg = \"\";\n      const video = this.$refs.video;\n      if (!video || video.readyState !== 4) {\n        this.errorMsg = \"‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\";\n        this.loading = false;\n        return;\n      }\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = video.videoWidth || 640;\n      canvas.height = video.videoHeight || 480;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      canvas.toBlob(async blob => {\n        if (!blob) {\n          this.errorMsg = \"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ\";\n          this.loading = false;\n          return;\n        }\n        try {\n          const formData = new FormData();\n          formData.append(\"file\", blob, \"frame.jpg\");\n          const response = await axios.post(\"http://localhost:5001/predict\", formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          });\n          this.prediction = response.data.prediction || \"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå\";\n          if (this.prediction && this.prediction !== \"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå\") {\n            this.speakText(this.prediction);\n\n            // ‚úÖ ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏õ MQTT\n            if (this.mqttClient && this.mqttClient.connected) {\n              this.mqttClient.publish(\"hand_sign/translation\", this.prediction);\n            }\n\n            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÑ‡∏°‡πà‡∏™‡πà‡∏á gesture ‡πÅ‡∏•‡πâ‡∏ß)\n            await this.saveTranslation(blob, this.prediction);\n            await this.loadTranslations();\n          }\n        } catch (error) {\n          console.error(\"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•:\", error);\n          this.errorMsg = \"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤‡∏°‡∏∑‡∏≠\";\n        }\n        this.loading = false;\n      }, \"image/jpeg\");\n    },\n    async saveTranslation(imageBlob, predictedText) {\n      if (this.saving) return;\n      this.saving = true;\n      const formData = new FormData();\n      formData.append(\"file\", imageBlob);\n      formData.append(\"predicted_text\", predictedText);\n      try {\n        await axios.post(\"http://localhost:5000/server\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n      } catch (error) {\n        console.error(\"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:\", error);\n      }\n      this.saving = false;\n    },\n    // ================= UTILS =================\n    speakText(text) {\n      if (!window.speechSynthesis) return;\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = \"th-TH\";\n      utterance.volume = 1;\n      window.speechSynthesis.cancel();\n      window.speechSynthesis.speak(utterance);\n    },\n    async loadTranslations() {\n      try {\n        const res = await axios.get(\"http://localhost:5000/server\");\n        this.translations = res.data.rows;\n      } catch (err) {\n        console.error(\"‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß\", err);\n      }\n    },\n    formatDate(dateStr) {\n      const date = new Date(dateStr);\n      // ‡∏õ‡∏£‡∏±‡∏ö timezone ‡πÄ‡∏õ‡πá‡∏ô UTC+7\n      date.setHours(date.getHours() + 7);\n      return date.toLocaleString(\"th-TH\");\n    }\n  }\n};","map":{"version":3,"names":["axios","mqtt","name","data","loading","prediction","errorMsg","intervalId","isTranslating","cameraOn","stream","translations","saving","mqttClient","mounted","startCamera","loadTranslations","connectMQTT","beforeDestroy","stopTranslation","stopCamera","end","methods","connect","on","console","log","subscribe","err","topic","message","toString","speakText","error","navigator","mediaDevices","getUserMedia","video","$refs","srcObject","getTracks","forEach","track","stop","toggleCamera","toggleTranslate","startTranslation","setInterval","sendFrame","clearInterval","readyState","canvas","document","createElement","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","toBlob","blob","formData","FormData","append","response","post","headers","connected","publish","saveTranslation","imageBlob","predictedText","text","window","speechSynthesis","utterance","SpeechSynthesisUtterance","lang","volume","cancel","speak","res","get","rows","formatDate","dateStr","date","Date","setHours","getHours","toLocaleString"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <header class=\"navbar\">\n      <div class=\"navbar-container\">\n        <a href=\"#\" class=\"navbar-brand\">üÖ∏üÖ£ ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤‡∏°‡∏∑‡∏≠ (‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡πà‡∏≤‡∏ô)</a>\n      </div>\n    </header>\n\n    <div class=\"container\">\n      <section class=\"camera-section\">\n        <h1 class=\"main-title\">üñêÔ∏è‡∏°‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤‡∏Å‡∏±‡∏ô</h1>\n        <div class=\"video-container\">\n          <video ref=\"video\" autoplay playsinline :class=\"{'video-box': true, 'active-camera': cameraOn}\"></video>\n          <div v-if=\"!cameraOn\" class=\"camera-placeholder\">\n            <span class=\"icon\">üì∏</span>\n            <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</p>\n          </div>\n        </div>\n\n        <div class=\"buttons\">\n          <button @click=\"toggleTranslate\" :class=\"['btn', isTranslating ? 'btn-red' : 'btn-blue']\">\n            {{ isTranslating ? '‡∏´‡∏¢‡∏∏‡∏î‡πÅ‡∏õ‡∏•' : '‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏õ‡∏•' }}\n            <span class=\"icon\">{{ isTranslating ? '‚è∏Ô∏è' : '‚ñ∂Ô∏è' }}</span>\n          </button>\n          <button @click=\"toggleCamera\" :class=\"['btn', cameraOn ? 'btn-gray' : 'btn-green']\">\n            {{ cameraOn ? '‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á' : '‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á' }}\n            <span class=\"icon\">{{ cameraOn ? '‚úñÔ∏è' : '‚úîÔ∏è' }}</span>\n          </button>\n        </div>\n\n        <div class=\"status-box\">\n          <div v-if=\"loading\" class=\"loading\">\n            <div class=\"spinner\"></div>\n            ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏õ‡∏•...\n          </div>\n          <div v-if=\"prediction && !loading\" class=\"result-box animated fadeIn\">\n            <p class=\"result-label\">‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•:</p>\n            <p class=\"result-text\">{{ prediction }}</p>\n          </div>\n          <div v-if=\"errorMsg\" class=\"error-box\">\n            <p class=\"error-msg\">{{ errorMsg }}</p>\n          </div>\n        </div>\n      </section>\n\n      <section class=\"history-section\">\n        <div class=\"section-header\">\n          <h2><span class=\"icon\">üìú</span> ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h2>\n        </div>\n        <div class=\"table-wrapper\">\n          <table class=\"styled-table\">\n            <thead>\n              <tr>\n                <th>‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>\n                <th>üì∑ ‡∏†‡∏≤‡∏û</th>\n                <th>üìù ‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏•</th>\n                <th>‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-if=\"translations.length === 0\">\n                <td colspan=\"4\" class=\"no-data-row\">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ</td>\n              </tr>\n              <tr v-for=\"(item, index) in translations\" :key=\"item.id\" class=\"history-row\">\n                <td>{{ index + 1 }}</td>\n                <td>\n                  <img :src=\"`http://localhost:5000/${item.image_path}`\" alt=\"translation\" class=\"thumb\" />\n                </td>\n                <td class=\"predicted-text\">{{ item.predicted_text }}</td>\n                <td>{{ formatDate(item.created_at) }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </section>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport mqtt from \"mqtt/dist/mqtt\"; // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö browser\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      loading: false,\n      prediction: \"\",\n      errorMsg: \"\",\n      intervalId: null,\n      isTranslating: false,\n      cameraOn: false,\n      stream: null,\n      translations: [],\n      saving: false,\n      mqttClient: null,\n    };\n  },\n  mounted() {\n    this.startCamera();\n    this.loadTranslations();\n    this.connectMQTT();\n  },\n  beforeDestroy() {\n    this.stopTranslation();\n    this.stopCamera();\n    if (this.mqttClient) this.mqttClient.end();\n  },\n  methods: {\n    // ================= MQTT =================\n    connectMQTT() {\n      this.mqttClient = mqtt.connect(\"wss://broker.hivemq.com:8884/mqtt\");\n\n      this.mqttClient.on(\"connect\", () => {\n        console.log(\"‚úÖ MQTT connected (Vue)\");\n        this.mqttClient.subscribe(\"hand_sign/translation\", (err) => {\n          if (!err) console.log(\"üì° Subscribed to hand_sign/translation\");\n        });\n      });\n\n      this.mqttClient.on(\"message\", (topic, message) => {\n        console.log(\"üì© MQTT message:\", topic, message.toString());\n        if (topic === \"hand_sign/translation\") {\n          this.prediction = message.toString();\n          this.speakText(this.prediction);\n        }\n      });\n\n      this.mqttClient.on(\"error\", (err) => {\n        console.error(\"‚ùå MQTT error:\", err);\n      });\n    },\n\n    // ================= CAMERA =================\n    async startCamera() {\n      try {\n        this.stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        this.$refs.video.srcObject = this.stream;\n        this.cameraOn = true;\n      } catch (err) {\n        this.errorMsg = \"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á\";\n        this.cameraOn = false;\n      }\n    },\n    stopCamera() {\n      if (this.stream) {\n        this.stream.getTracks().forEach(track => track.stop());\n        this.stream = null;\n      }\n      if (this.$refs.video) this.$refs.video.srcObject = null;\n      this.cameraOn = false;\n    },\n    toggleCamera() {\n      if (this.cameraOn) {\n        this.stopCamera();\n        this.stopTranslation();\n      } else {\n        this.startCamera();\n      }\n    },\n\n    // ================= TRANSLATION =================\n    toggleTranslate() {\n      if (this.isTranslating) {\n        this.stopTranslation();\n      } else {\n        if (!this.cameraOn) {\n          this.errorMsg = \"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏õ‡∏•\";\n          return;\n        }\n        this.startTranslation();\n      }\n    },\n    startTranslation() {\n      if (this.intervalId) return;\n      this.isTranslating = true;\n      this.prediction = \"\";\n      this.errorMsg = \"\";\n      this.intervalId = setInterval(this.sendFrame, 7500);\n    },\n    stopTranslation() {\n      if (this.intervalId) {\n        clearInterval(this.intervalId);\n        this.intervalId = null;\n      }\n      this.isTranslating = false;\n      this.loading = false;\n    },\n    async sendFrame() {\n      if (this.loading || this.saving) return;\n      this.loading = true;\n      this.errorMsg = \"\";\n\n      const video = this.$refs.video;\n      if (!video || video.readyState !== 4) {\n        this.errorMsg = \"‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\";\n        this.loading = false;\n        return;\n      }\n\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = video.videoWidth || 640;\n      canvas.height = video.videoHeight || 480;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      canvas.toBlob(async (blob) => {\n        if (!blob) {\n          this.errorMsg = \"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ\";\n          this.loading = false;\n          return;\n        }\n\n        try {\n          const formData = new FormData();\n          formData.append(\"file\", blob, \"frame.jpg\");\n\n          const response = await axios.post(\n            \"http://localhost:5001/predict\",\n            formData,\n            { headers: { \"Content-Type\": \"multipart/form-data\" } }\n          );\n\n          this.prediction = response.data.prediction || \"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå\";\n\n          if (this.prediction && this.prediction !== \"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå\") {\n            this.speakText(this.prediction);\n\n            // ‚úÖ ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏õ MQTT\n            if (this.mqttClient && this.mqttClient.connected) {\n              this.mqttClient.publish(\"hand_sign/translation\", this.prediction);\n            }\n\n            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÑ‡∏°‡πà‡∏™‡πà‡∏á gesture ‡πÅ‡∏•‡πâ‡∏ß)\n            await this.saveTranslation(blob, this.prediction);\n            await this.loadTranslations();\n          }\n        } catch (error) {\n          console.error(\"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•:\", error);\n          this.errorMsg = \"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤‡∏°‡∏∑‡∏≠\";\n        }\n\n        this.loading = false;\n      }, \"image/jpeg\");\n    },\n\n    async saveTranslation(imageBlob, predictedText) {\n      if (this.saving) return;\n      this.saving = true;\n      const formData = new FormData();\n      formData.append(\"file\", imageBlob);\n      formData.append(\"predicted_text\", predictedText);\n\n      try {\n        await axios.post(\"http://localhost:5000/server\", formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      } catch (error) {\n        console.error(\"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:\", error);\n      }\n      this.saving = false;\n    },\n\n    // ================= UTILS =================\n    speakText(text) {\n      if (!window.speechSynthesis) return;\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = \"th-TH\";\n      utterance.volume = 1;\n      window.speechSynthesis.cancel();\n      window.speechSynthesis.speak(utterance);\n    },\n\n    async loadTranslations() {\n      try {\n        const res = await axios.get(\"http://localhost:5000/server\");\n        this.translations = res.data.rows;\n      } catch (err) {\n        console.error(\"‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß\", err);\n      }\n    },\n\n    formatDate(dateStr) {\n  const date = new Date(dateStr);\n  // ‡∏õ‡∏£‡∏±‡∏ö timezone ‡πÄ‡∏õ‡πá‡∏ô UTC+7\n  date.setHours(date.getHours() + 7);\n  return date.toLocaleString(\"th-TH\");\n    },\n  }\n};\n</script>\n\n\n\n\n\n\n\n\n\n<style>\n:root {\n  --primary-color: #4f46e5;\n  --secondary-color: #10b981;\n  --danger-color: #ef4444;\n  --gray-color: #6b7280;\n  --light-gray: #f9fafb;\n  --dark-gray: #111827;\n  --font-family: 'Sarabun', 'Noto Sans Thai', Arial, sans-serif;\n  --border-radius: 16px;\n  --box-shadow: 0 10px 25px rgba(0,0,0,0.12);\n  --transition: 0.3s ease-in-out;\n}\n\n/* ==============================\n   BASE\n============================== */\nbody {\n  margin: 0;\n  font-family: var(--font-family);\n  background: linear-gradient(135deg, #e0e7ff, #f9fafb);\n  color: var(--dark-gray);\n  line-height: 1.6;\n}\n\n/* ==============================\n   NAVBAR\n============================== */\n.navbar {\n  background: rgba(255,255,255,0.8);\n  backdrop-filter: blur(12px);\n  box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n  padding: 1rem 2rem;\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\n.navbar-container {\n  max-width: 1200px;\n  margin: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.navbar-brand {\n  font-size: 1.8rem;\n  font-weight: 800;\n  color: var(--primary-color);\n  text-decoration: none;\n  letter-spacing: 1px;\n}\n\n/* ==============================\n   CONTAINER\n============================== */\n.container {\n  max-width: 1200px;\n  margin: 2rem auto;\n  padding: 0 1rem;\n}\n\n/* ==============================\n   CAMERA SECTION\n============================== */\n.camera-section {\n  background: rgba(255,255,255,0.75);\n  backdrop-filter: blur(15px);\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  text-align: center;\n  padding: 2rem;\n  transition: transform var(--transition), box-shadow var(--transition);\n}\n.camera-section:hover {\n  transform: translateY(-6px);\n  box-shadow: 0 18px 35px rgba(0,0,0,0.2);\n}\n\n.main-title {\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: var(--primary-color);\n  margin-bottom: 2rem;\n  text-shadow: 0 2px 10px rgba(0,0,0,0.15);\n}\n\n.video-container {\n  position: relative;\n  width: 100%;\n  max-width: 640px;\n  margin: auto;\n  aspect-ratio: 4/3;\n  border-radius: var(--border-radius);\n  overflow: hidden;\n  background: linear-gradient(145deg, #ffffff, #e0e7ff);\n  box-shadow: 8px 8px 20px rgba(0,0,0,0.08), -8px -8px 20px rgba(255,255,255,0.8);\n}\n.video-box {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  display: none;\n}\n.video-box.active-camera {\n  display: block;\n  animation: fadeIn 0.6s ease-in-out;\n}\n.camera-placeholder {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: var(--gray-color);\n  text-align: center;\n}\n.camera-placeholder .icon {\n  font-size: 5rem;\n  display: block;\n  animation: pulse 1.5s infinite;\n}\n\n/* ==============================\n   BUTTONS\n============================== */\n.buttons {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin: 2rem 0;\n}\n.btn {\n  padding: 12px 32px;\n  font-size: 1.1rem;\n  font-weight: 700;\n  border-radius: 50px;\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: all var(--transition);\n  box-shadow: 4px 4px 12px rgba(0,0,0,0.15), -4px -4px 12px rgba(255,255,255,0.5);\n}\n.btn:hover {\n  transform: scale(1.06);\n  box-shadow: 6px 6px 20px rgba(0,0,0,0.2), -6px -6px 20px rgba(255,255,255,0.6);\n}\n.btn-blue { background: linear-gradient(135deg,#4f46e5,#818cf8); }\n.btn-green { background: linear-gradient(135deg,#10b981,#34d399); }\n.btn-red { background: linear-gradient(135deg,#ef4444,#f87171); }\n.btn-gray { background: linear-gradient(135deg,#6b7280,#9ca3af); }\n\n/* ==============================\n   STATUS BOX\n============================== */\n.status-box { min-height: 80px; font-size: 1.2rem; }\n.loading {\n  display: flex; justify-content: center; align-items: center; gap: 12px;\n  font-weight: 700; color: var(--primary-color);\n}\n.spinner {\n  border: 4px solid rgba(0,0,0,0.1);\n  width: 32px; height: 32px; border-radius: 50%;\n  border-left-color: var(--primary-color);\n  animation: spin 1s linear infinite;\n}\n.result-box {\n  margin-top: 1rem;\n  padding: 1rem 2rem;\n  background: rgba(255,255,255,0.6);\n  backdrop-filter: blur(10px);\n  border-radius: var(--border-radius);\n  border-left: 6px solid var(--primary-color);\n  font-weight: 600;\n  box-shadow: var(--box-shadow);\n  animation: fadeIn 0.6s ease-in-out;\n}\n.error-box {\n  margin-top: 1rem;\n  background: rgba(255,235,235,0.7);\n  border-left: 6px solid var(--danger-color);\n  border-radius: var(--border-radius);\n  padding: 1rem 1.5rem;\n  font-weight: 600;\n  color: var(--danger-color);\n}\n\n/* ==============================\n   HISTORY\n============================== */\n.history-section {\n  margin-top: 2rem;\n  background: rgba(255,255,255,0.8);\n  backdrop-filter: blur(12px);\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  padding: 2rem;\n}\n.section-header h2 {\n  font-size: 2rem;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: var(--primary-color);\n  margin-bottom: 1rem;\n}\n.styled-table {\n  width: 100%;\n  border-collapse: collapse;\n  overflow: hidden;\n  border-radius: var(--border-radius);\n}\n.styled-table thead {\n  background: linear-gradient(135deg, var(--primary-color), #6366f1);\n  color: white;\n}\n.styled-table th, .styled-table td {\n  padding: 14px;\n  text-align: center;\n}\n.styled-table tbody tr:nth-child(even) {\n  background: #f3f4f6;\n}\n.styled-table tbody tr:hover {\n  background: #e0e7ff;\n  transition: background 0.3s ease;\n}\n.thumb {\n  width: 90px;\n  height: 65px;\n  border-radius: var(--border-radius);\n  object-fit: cover;\n  border: 1px solid #ddd;\n}\n.predicted-text {\n  font-weight: 700;\n  color: var(--primary-color);\n}\n\n/* ==============================\n   ANIMATIONS\n============================== */\n@keyframes spin { to { transform: rotate(360deg);} }\n@keyframes fadeIn { from {opacity:0; transform: translateY(8px);} to {opacity:1; transform: translateY(0);} }\n@keyframes pulse { 0%,100% {transform: scale(1); opacity:0.7;} 50%{transform:scale(1.1); opacity:1;} }\n\n/* ==============================\n   RESPONSIVE\n============================== */\n@media (max-width: 768px) {\n  .main-title { font-size: 2rem; }\n  .buttons { flex-direction: column; }\n  .styled-table thead { display: none; }\n  .styled-table, .styled-table tbody, .styled-table tr, .styled-table td {\n    display: block;\n    width: 100%;\n  }\n  .styled-table tr { margin-bottom: 1rem; background: rgba(255,255,255,0.9); border-radius: var(--border-radius); padding: 1rem; }\n  .styled-table td {\n    padding: 0.5rem 0;\n    text-align: left;\n  }\n  .thumb { width: 100%; height: auto; }\n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}